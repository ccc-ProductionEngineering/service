pipeline {
    agent any
    tools {
        jdk 'jdk21' // This name must match the JDK installation name used in Jenkins Global Tool Configuration
    }
    environment {
        DOCKER_PASSWORD = credentials("docker_password")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
    steps {
        script {
            GIT_TAG = sh([script: 'git fetch --tag && git tag', returnStdout: true]).trim()
            MAJOR_VERSION = sh([script: 'git tag | cut -d . -f 1', returnStdout: true]).trim()
            MINOR_VERSION = sh([script: 'git tag | cut -d . -f 2', returnStdout: true]).trim()
            PATCH_VERSION = sh([script: 'git tag | cut -d . -f 3', returnStdout: true]).trim()

            // Calculezi noua versiune minoră în shell
            NEW_MINOR = sh(script: "expr ${MINOR_VERSION} + 1", returnStdout: true).trim()

            IMAGE_TAG = "${MAJOR_VERSION}.${NEW_MINOR}.${PATCH_VERSION}"

            sh "docker build -t saicucarina23/hello-img:${IMAGE_TAG} ."
            sh "docker login -u saicucarina23 -p ${DOCKER_PASSWORD_PSW}"
            sh "docker push saicucarina23/hello-img:${IMAGE_TAG}"
        }
    }
}


    }
}
